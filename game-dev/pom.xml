<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.example</groupId>
    <artifactId>game</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <name>game/dev</name>
  <artifactId>game-dev</artifactId>
  <modelVersion>4.0.0</modelVersion>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <build>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/release/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- package -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <excludes>
            <!-- don't copy resources to jar -->
            <exclude>*.properties</exclude>
            <exclude>*.xml</exclude>
          </excludes>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>org.example.MainApplication</mainClass>
            </manifest>
            <manifestEntries>
              <Class-Path>resources/</Class-Path>
            </manifestEntries>
          </archive>
          <outputDirectory>${project.build.directory}/release</outputDirectory>

        </configuration>
      </plugin>

      <!--resource copy -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/release/resources/</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- 添加 exec-maven-plugin 插件 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
<!--        <executions>-->
<!--          <execution>-->
<!--            &lt;!&ndash; 绑定到 compile 阶段之后 &ndash;&gt;-->
<!--            <phase>compile</phase>-->
<!--            <goals>-->
<!--              <goal>exec</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              &lt;!&ndash; 指定要执行的命令或脚本 &ndash;&gt;-->
<!--              <executable>java</executable>-->
<!--              <arguments>-->
<!--                <argument>-cp</argument>-->
<!--                <classpath /> &lt;!&ndash; 这将自动包含项目的类路径 &ndash;&gt;-->
<!--                <argument>org.example.Test</argument> &lt;!&ndash; 你的自定义类 &ndash;&gt;-->
<!--              </arguments>-->
<!--            </configuration>-->
<!--          </execution>-->
<!--        </executions>-->
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>

        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>process-classes</id>
            <phase>process-classes</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>



    </plugins>
  </build>

  <dependencies>

    <!-- https://mvnrepository.com/artifact/io.github.classgraph/classgraph -->
    <dependency>
      <groupId>io.github.classgraph</groupId>
      <artifactId>classgraph</artifactId>

    </dependency>


    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>game-util</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api -->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
    </dependency>

    <dependency>
      <groupId>com.alibaba.fastjson2</groupId>
      <artifactId>fastjson2</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
    </dependency>

    <dependency>
      <groupId>org.example</groupId>
      <artifactId>proxy-util-dev</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
  </dependencies>




</project>